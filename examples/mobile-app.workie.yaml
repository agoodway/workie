# Sample .workie.yaml for a React Native Mobile App
# This configuration demonstrates mobile development patterns

name: "Mobile App"
description: "A React Native mobile application for iOS and Android"

# Environment variables
env:
  NODE_ENV: "development"
  REACT_NATIVE_PACKAGER_HOSTNAME: "localhost"
  FLIPPER_DISABLE: "1"  # Disable Flipper for better performance

# Dependencies
dependencies:
  - name: "node"
    version: "18"
    package_manager: "npm"
  
  - name: "watchman"
    version: "latest"
  
  - name: "cocoapods"
    version: "latest"

# Development tasks
tasks:
  install:
    description: "Install all dependencies"
    commands:
      - "npm install"
      - "cd ios && pod install"
  
  start:
    description: "Start Metro bundler"
    commands:
      - "npx react-native start"
  
  ios:
    description: "Run on iOS simulator"
    commands:
      - "npx react-native run-ios"
    depends_on: ["install"]
  
  ios:device:
    description: "Run on iOS device"
    commands:
      - "npx react-native run-ios --device"
    depends_on: ["install"]
  
  android:
    description: "Run on Android emulator"
    commands:
      - "npx react-native run-android"
    depends_on: ["install"]
  
  android:device:
    description: "Run on Android device"
    commands:
      - "npx react-native run-android --deviceId=$(adb devices | sed -n 2p | awk '{print $1}')"
    depends_on: ["install"]
  
  test:
    description: "Run tests"
    commands:
      - "npm test"
      - "npm run test:e2e"
  
  lint:
    description: "Run ESLint"
    commands:
      - "npm run lint"
      - "npm run lint:fix"
  
  type-check:
    description: "Run TypeScript type checking"
    commands:
      - "npx tsc --noEmit"
  
  build:ios:
    description: "Build iOS app for release"
    commands:
      - "cd ios && xcodebuild -workspace MyApp.xcworkspace -scheme MyApp -configuration Release -destination generic/platform=iOS -archivePath MyApp.xcarchive archive"
  
  build:android:
    description: "Build Android APK"
    commands:
      - "cd android && ./gradlew assembleRelease"
  
  clean:
    description: "Clean project"
    commands:
      - "npx react-native clean"
      - "cd ios && xcodebuild clean"
      - "cd android && ./gradlew clean"
      - "npm start -- --reset-cache"
  
  pods:install:
    description: "Install iOS CocoaPods"
    commands:
      - "cd ios && pod install"
  
  pods:update:
    description: "Update iOS CocoaPods"
    commands:
      - "cd ios && pod update"
  
  adb:reverse:
    description: "Set up ADB reverse for Android development"
    commands:
      - "adb reverse tcp:8081 tcp:8081"
      - "adb reverse tcp:3000 tcp:3000"
  
  release:prepare:
    description: "Prepare release builds"
    commands:
      - "npm version patch"
      - "workie run build:ios"
      - "workie run build:android"

# File watching
watch:
  - pattern: "**/*.{js,jsx,ts,tsx}"
    tasks: ["lint", "type-check"]
  - pattern: "package.json"
    tasks: ["install"]
  - pattern: "ios/Podfile"
    tasks: ["pods:install"]

# Git hooks
hooks:
  pre-commit:
    - "workie run lint"
    - "workie run type-check"
    - "workie run test"

# Custom scripts
scripts:
  reset:
    description: "Complete project reset"
    commands:
      - "rm -rf node_modules"
      - "rm -rf ios/Pods"
      - "rm -rf ios/build"
      - "rm -rf android/build"
      - "rm -rf android/app/build"
      - "workie run install"
  
  simulator:list:
    description: "List available iOS simulators"
    commands:
      - "xcrun simctl list devices"
  
  emulator:list:
    description: "List available Android emulators"
    commands:
      - "emulator -list-avds"
  
  logs:ios:
    description: "View iOS logs"
    commands:
      - "npx react-native log-ios"
  
  logs:android:
    description: "View Android logs"
    commands:
      - "npx react-native log-android"

# Platform-specific configurations
platforms:
  ios:
    build_settings:
      DEVELOPMENT_TEAM: "YOUR_TEAM_ID"
      CODE_SIGN_IDENTITY: "iPhone Developer"
  
  android:
    gradle_properties:
      MYAPP_UPLOAD_STORE_FILE: "my-upload-key.keystore"
      MYAPP_UPLOAD_KEY_ALIAS: "my-key-alias"

# Documentation
docs:
  setup: |
    ## Mobile App Setup
    
    1. Install dependencies: `workie run install`
    2. Start Metro bundler: `workie run start`
    3. In a new terminal:
       - For iOS: `workie run ios`
       - For Android: `workie run android`
    
    Make sure you have:
    - Xcode (for iOS development)
    - Android Studio (for Android development)
    - iOS Simulator or Android Emulator running
  
  troubleshooting: |
    ## Common Issues
    
    ### Metro bundler issues:
    - Reset cache: `workie run start -- --reset-cache`
    - Clean project: `workie run clean`
    
    ### iOS issues:
    - Clean iOS build: `cd ios && xcodebuild clean`
    - Reinstall pods: `workie run pods:install`
    
    ### Android issues:
    - Clean Android build: `cd android && ./gradlew clean`
    - Reset ADB: `workie run adb:reverse`
  
  deployment: |
    ## Deployment
    
    ### iOS App Store:
    1. Build for release: `workie run build:ios`
    2. Upload to App Store Connect via Xcode
    
    ### Google Play Store:
    1. Build APK: `workie run build:android`
    2. Upload to Google Play Console
